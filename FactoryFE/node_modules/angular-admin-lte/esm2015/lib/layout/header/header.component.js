/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, ElementRef, Input, NgZone, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { LayoutStore } from '../layout.store';
import { HeaderService } from './header.service';
import { removeListeners, removeSubscriptions } from '../../helpers';
/**
 * Header Logo
 */
export class HeaderLogoComponent {
}
HeaderLogoComponent.decorators = [
    { type: Component, args: [{
                selector: 'mk-layout-header-logo',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }] }
];
HeaderLogoComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef',] }]
};
if (false) {
    /** @type {?} */
    HeaderLogoComponent.prototype.templateRef;
}
/**
 * Header Logo Mini
 */
export class HeaderLogoMiniComponent {
}
HeaderLogoMiniComponent.decorators = [
    { type: Component, args: [{
                selector: 'mk-layout-header-logo-mini',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }] }
];
HeaderLogoMiniComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef',] }]
};
if (false) {
    /** @type {?} */
    HeaderLogoMiniComponent.prototype.templateRef;
}
/**
 * Header
 */
export class HeaderComponent {
    /**
     * \@method constructor
     * @param {?} layoutStore [description]
     * @param {?} ngZone      [description]
     * @param {?} renderer2   [description]
     * @param {?} elementRef   [description]
     * @param {?} headerService   [description]
     */
    constructor(layoutStore, ngZone, renderer2, elementRef, headerService) {
        this.layoutStore = layoutStore;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.elementRef = elementRef;
        this.headerService = headerService;
        this.listeners = [];
        this.subscriptions = [];
        this.isSidebarLeftToggle = true;
        this.isSidebarRightToggle = true;
        this.logoLink = '/';
    }
    /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    ngAfterViewInit() {
        this.headerService.elementRef = this.headerElement;
        if (this.sidebarLeftToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe((/**
             * @param {?} value
             * @return {?}
             */
            (value) => {
                this.isSidebarLeftCollapsed = value;
            })));
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            () => {
                this.listeners.push(this.renderer2.listen(this.sidebarLeftToggleElement.nativeElement, 'click', (/**
                 * @param {?} event
                 * @return {?}
                 */
                (event) => {
                    event.preventDefault();
                    this.layoutStore.sidebarLeftCollapsed(!this.isSidebarLeftCollapsed);
                })));
            }));
        }
        if (this.sidebarRightToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe((/**
             * @param {?} value
             * @return {?}
             */
            (value) => {
                this.isSidebarRightCollapsed = value;
            })));
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            () => {
                this.listeners.push(this.renderer2.listen(this.sidebarRightToggleElement.nativeElement, 'click', (/**
                 * @param {?} event
                 * @return {?}
                 */
                (event) => {
                    event.preventDefault();
                    this.layoutStore.sidebarRightCollapsed(!this.isSidebarRightCollapsed);
                })));
            }));
        }
    }
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    ngOnDestroy() {
        this.listeners = removeListeners(this.listeners);
        this.subscriptions = removeSubscriptions(this.subscriptions);
    }
}
HeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'mk-layout-header',
                template: "<header #headerElement class=\"main-header\">\n  <a [routerLink]=\"logoLink\" class=\"logo\">\n    <span class=\"logo-mini\"><ng-template [ngTemplateOutlet]=\"headerLogoMiniComponent?.templateRef\"></ng-template></span>\n    <span class=\"logo-lg\"><ng-template [ngTemplateOutlet]=\"headerLogoComponent?.templateRef\"></ng-template></span>\n  </a>\n  <nav class=\"navbar navbar-static-top\">\n    <a *ngIf=\"isSidebarLeftToggle\" #sidebarLeftToggleElement href=\"#\" class=\"sidebar-toggle\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n    </a>\n    <div *ngIf=\"isSidebarRightToggle\" class=\"sidebar-right-toggle\">\n      <a #sidebarRightToggleElement href=\"#\"><i class=\"fa fa-gears\"></i></a>\n    </div>\n    <ng-content></ng-content>\n  </nav>\n</header>\n",
                styles: [":host{display:block}.sidebar-right-toggle{float:right}.sidebar-right-toggle a{padding:15px;display:block;line-height:20px;cursor:pointer}"]
            }] }
];
/** @nocollapse */
HeaderComponent.ctorParameters = () => [
    { type: LayoutStore },
    { type: NgZone },
    { type: Renderer2 },
    { type: ElementRef },
    { type: HeaderService }
];
HeaderComponent.propDecorators = {
    isSidebarLeftToggle: [{ type: Input }],
    isSidebarRightToggle: [{ type: Input }],
    logoLink: [{ type: Input }],
    headerLogoComponent: [{ type: ContentChild, args: [HeaderLogoComponent,] }],
    headerLogoMiniComponent: [{ type: ContentChild, args: [HeaderLogoMiniComponent,] }],
    headerElement: [{ type: ViewChild, args: ['headerElement',] }],
    sidebarLeftToggleElement: [{ type: ViewChild, args: ['sidebarLeftToggleElement',] }],
    sidebarRightToggleElement: [{ type: ViewChild, args: ['sidebarRightToggleElement',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.isSidebarLeftCollapsed;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.isSidebarRightCollapsed;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.listeners;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.subscriptions;
    /** @type {?} */
    HeaderComponent.prototype.isSidebarLeftToggle;
    /** @type {?} */
    HeaderComponent.prototype.isSidebarRightToggle;
    /** @type {?} */
    HeaderComponent.prototype.logoLink;
    /** @type {?} */
    HeaderComponent.prototype.headerLogoComponent;
    /** @type {?} */
    HeaderComponent.prototype.headerLogoMiniComponent;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.headerElement;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.sidebarLeftToggleElement;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.sidebarRightToggleElement;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.layoutStore;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.renderer2;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    HeaderComponent.prototype.headerService;
}
//# sourceMappingURL=data:application/json;base64,