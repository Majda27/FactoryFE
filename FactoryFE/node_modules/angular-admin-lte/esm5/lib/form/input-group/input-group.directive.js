/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive } from '@angular/core';
/*
 *
 */
var InputGroupLabelDirective = /** @class */ (function () {
    function InputGroupLabelDirective() {
    }
    InputGroupLabelDirective.decorators = [
        { type: Directive, args: [{
                    /* tslint:disable-next-line:directive-selector */
                    selector: 'mk-input-group-label'
                },] }
    ];
    return InputGroupLabelDirective;
}());
export { InputGroupLabelDirective };
/*
 *
 */
var InputGroupAddonLeftDirective = /** @class */ (function () {
    function InputGroupAddonLeftDirective() {
    }
    InputGroupAddonLeftDirective.decorators = [
        { type: Directive, args: [{
                    /* tslint:disable-next-line:directive-selector */
                    selector: 'mk-input-group-addon-left'
                },] }
    ];
    return InputGroupAddonLeftDirective;
}());
export { InputGroupAddonLeftDirective };
/*
 *
 */
var InputGroupAddonRightDirective = /** @class */ (function () {
    function InputGroupAddonRightDirective() {
    }
    InputGroupAddonRightDirective.decorators = [
        { type: Directive, args: [{
                    /* tslint:disable-next-line:directive-selector */
                    selector: 'mk-input-group-addon-right'
                },] }
    ];
    return InputGroupAddonRightDirective;
}());
export { InputGroupAddonRightDirective };
/*
 *
 */
var InputGroupContentDirective = /** @class */ (function () {
    function InputGroupContentDirective() {
    }
    InputGroupContentDirective.decorators = [
        { type: Directive, args: [{
                    /* tslint:disable-next-line:directive-selector */
                    selector: 'mk-input-group-content'
                },] }
    ];
    return InputGroupContentDirective;
}());
export { InputGroupContentDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hZG1pbi1sdGUvIiwic291cmNlcyI6WyJsaWIvZm9ybS9pbnB1dC1ncm91cC9pbnB1dC1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFNMUM7SUFBQTtJQUl1QyxDQUFDOztnQkFKdkMsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsc0JBQXNCO2lCQUNqQzs7SUFDc0MsK0JBQUM7Q0FBQSxBQUp4QyxJQUl3QztTQUEzQix3QkFBd0I7Ozs7QUFLckM7SUFBQTtJQUkyQyxDQUFDOztnQkFKM0MsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsMkJBQTJCO2lCQUN0Qzs7SUFDMEMsbUNBQUM7Q0FBQSxBQUo1QyxJQUk0QztTQUEvQiw0QkFBNEI7Ozs7QUFLekM7SUFBQTtJQUk0QyxDQUFDOztnQkFKNUMsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsNEJBQTRCO2lCQUN2Qzs7SUFDMkMsb0NBQUM7Q0FBQSxBQUo3QyxJQUk2QztTQUFoQyw2QkFBNkI7Ozs7QUFLMUM7SUFBQTtJQUl5QyxDQUFDOztnQkFKekMsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsd0JBQXdCO2lCQUNuQzs7SUFDd0MsaUNBQUM7Q0FBQSxBQUoxQyxJQUkwQztTQUE3QiwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG4vKlxuICpcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3IgKi9cbiAgc2VsZWN0b3I6ICdtay1pbnB1dC1ncm91cC1sYWJlbCdcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRHcm91cExhYmVsRGlyZWN0aXZlIHt9XG5cbi8qXG4gKlxuICovXG5ARGlyZWN0aXZlKHtcbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvciAqL1xuICBzZWxlY3RvcjogJ21rLWlucHV0LWdyb3VwLWFkZG9uLWxlZnQnXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBBZGRvbkxlZnREaXJlY3RpdmUge31cblxuLypcbiAqXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yICovXG4gIHNlbGVjdG9yOiAnbWstaW5wdXQtZ3JvdXAtYWRkb24tcmlnaHQnXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBBZGRvblJpZ2h0RGlyZWN0aXZlIHt9XG5cbi8qXG4gKlxuICovXG5ARGlyZWN0aXZlKHtcbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvciAqL1xuICBzZWxlY3RvcjogJ21rLWlucHV0LWdyb3VwLWNvbnRlbnQnXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBDb250ZW50RGlyZWN0aXZlIHt9XG4iXX0=