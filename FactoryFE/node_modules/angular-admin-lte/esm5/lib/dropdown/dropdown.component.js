/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, Input, NgZone, Output, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { removeListeners } from '../helpers';
/*
 *
 */
var DropdownToggleComponent = /** @class */ (function () {
    function DropdownToggleComponent() {
    }
    DropdownToggleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-dropdown-toggle',
                    template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    DropdownToggleComponent.propDecorators = {
        templateRef: [{ type: ViewChild, args: ['templateRef',] }],
        toggleElement: [{ type: ContentChild, args: ['toggleElement',] }]
    };
    return DropdownToggleComponent;
}());
export { DropdownToggleComponent };
if (false) {
    /** @type {?} */
    DropdownToggleComponent.prototype.templateRef;
    /** @type {?} */
    DropdownToggleComponent.prototype.toggleElement;
}
/*
 *
 */
var DropdownMenuComponent = /** @class */ (function () {
    function DropdownMenuComponent() {
    }
    DropdownMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-dropdown-menu',
                    template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    DropdownMenuComponent.propDecorators = {
        templateRef: [{ type: ViewChild, args: ['templateRef',] }]
    };
    return DropdownMenuComponent;
}());
export { DropdownMenuComponent };
if (false) {
    /** @type {?} */
    DropdownMenuComponent.prototype.templateRef;
}
/*
 *
 */
var DropdownComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param changeDetectorRef [description]
     * @param elementRef [description]
     * @param ngZone [description]
     * @param renderer2 [description]
     */
    function DropdownComponent(changeDetectorRef, elementRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.listeners = [];
        this.buttonStyleClass = 'btn dropdown-toggle';
        this.buttonBackgroudColor = 'default';
        this.contentStyleClass = 'dropdown-menu';
        this.isCollapsed = true;
        this.isWrapper = true;
        this.styleClass = 'dropdown';
        this.onCollapseStart = new EventEmitter();
        this.onCollapseDone = new EventEmitter();
    }
    /**
     * @method ngAfterViewInit
     */
    /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    DropdownComponent.prototype.ngAfterViewInit = /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var toggleNativeElement = this.dropdownToggleComponent && this.dropdownToggleComponent.toggleElement ?
            this.dropdownToggleComponent.toggleElement.nativeElement : this.toggleElement ?
            this.toggleElement : this.defaultToggleElement ?
            this.defaultToggleElement.nativeElement : null;
        if (toggleNativeElement) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                _this.listeners.push(_this.renderer2.listen(toggleNativeElement, 'click', (/**
                 * @param {?} event
                 * @return {?}
                 */
                function (event) {
                    _this.toggleDropdown(event);
                    _this.changeDetectorRef.detectChanges();
                })));
            }));
        }
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    DropdownComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.unBindDocumentClickListener();
        removeListeners(this.listeners);
    };
    /**
     * [toggle description]
     * @method toggle
     * @param event [description]
     */
    /**
     * [toggle description]
     * \@method toggle
     * @param {?} event [description]
     * @return {?}
     */
    DropdownComponent.prototype.toggleDropdown = /**
     * [toggle description]
     * \@method toggle
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        var _this = this;
        event.preventDefault();
        this.isCollapsed = !this.isCollapsed;
        if (!this.isCollapsed) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.bindDocumentClickListener();
                }));
            }));
        }
        else {
            this.unBindDocumentClickListener();
        }
    };
    /**
     * [collapseStart description]
     * @method collapseStart
     * @param event [description]
     */
    /**
     * [collapseStart description]
     * \@method collapseStart
     * @param {?} event [description]
     * @return {?}
     */
    DropdownComponent.prototype.collapseStart = /**
     * [collapseStart description]
     * \@method collapseStart
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        this.onCollapseStart.emit(event);
    };
    /**
     * [collapseDone description]
     * @method collapseDone
     * @param event [description]
     */
    /**
     * [collapseDone description]
     * \@method collapseDone
     * @param {?} event [description]
     * @return {?}
     */
    DropdownComponent.prototype.collapseDone = /**
     * [collapseDone description]
     * \@method collapseDone
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        this.onCollapseStart.emit(event);
    };
    /**
     * [bindDocumentClickListener description]
     * @method bindDocumentClickListener
     */
    /**
     * [bindDocumentClickListener description]
     * \@method bindDocumentClickListener
     * @private
     * @return {?}
     */
    DropdownComponent.prototype.bindDocumentClickListener = /**
     * [bindDocumentClickListener description]
     * \@method bindDocumentClickListener
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.documentClickListener = _this.renderer2.listen('document', 'click', (/**
             * @return {?}
             */
            function () {
                if (!_this.isCollapsed) {
                    _this.isCollapsed = true;
                    _this.unBindDocumentClickListener();
                    _this.changeDetectorRef.detectChanges();
                }
            }));
        }));
    };
    /**
     * [unBindDocumentClickListener description]
     * @method unBindDocumentClickListener
     */
    /**
     * [unBindDocumentClickListener description]
     * \@method unBindDocumentClickListener
     * @private
     * @return {?}
     */
    DropdownComponent.prototype.unBindDocumentClickListener = /**
     * [unBindDocumentClickListener description]
     * \@method unBindDocumentClickListener
     * @private
     * @return {?}
     */
    function () {
        if (this.documentClickListener) {
            this.documentClickListener();
        }
    };
    DropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-dropdown, [mk-dropdown]',
                    template: "<ng-template #innerTemplate>\n  <ng-container *ngIf=\"this.dropdownToggleComponent && this.dropdownToggleComponent.toggleElement; else noToggleElement\" [ngTemplateOutlet]=\"dropdownToggleComponent.templateRef\"></ng-container>\n  <ng-template #noToggleElement>\n    <button *ngIf=\"toggleText || dropdownToggleComponent\" [mkColor]=\"buttonBackgroudColor\" mkColorProperty=\"background-color\" mkColorPrefix=\"btn\" [ngClass]=\"buttonStyleClass\" #toggleElement>\n      {{toggleText}}\n      <ng-container [ngTemplateOutlet]=\"dropdownToggleComponent?.templateRef\"></ng-container>\n    </button>\n  </ng-template>\n  <ul [ngClass]=\"contentStyleClass\" [mkCollapseAnimation]=\"isCollapsed\" (mkCollapseAnimation.start)=\"collapseStart($event)\" (mkCollapseAnimation.done)=\"collapseDone($event)\">\n    <ng-container *ngIf=\"dropdownMenuComponent; else noDropdownMenuComponent\" [ngTemplateOutlet]=\"dropdownMenuComponent.templateRef\"></ng-container>\n    <ng-template #noDropdownMenuComponent>\n      <ng-content></ng-content>\n    </ng-template>\n  </ul>\n</ng-template>\n\n<div *ngIf=\"isWrapper; else noWrapper\" [ngClass]=\"styleClass\">\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</div>\n\n<ng-template #noWrapper>\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</ng-template>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".dropdown-menu{display:block}.dropdown-menu.collapsing:not(.un-collapse){transition-property:height,padding-top,padding-bottom;padding-top:0;padding-bottom:0}"]
                }] }
    ];
    /** @nocollapse */
    DropdownComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    DropdownComponent.propDecorators = {
        buttonStyleClass: [{ type: Input }],
        buttonBackgroudColor: [{ type: Input }],
        contentStyleClass: [{ type: Input }],
        isCollapsed: [{ type: Input }],
        isWrapper: [{ type: Input }],
        styleClass: [{ type: Input }],
        toggleElement: [{ type: Input }],
        toggleText: [{ type: Input }],
        onCollapseStart: [{ type: Output }],
        onCollapseDone: [{ type: Output }],
        dropdownToggleComponent: [{ type: ContentChild, args: [DropdownToggleComponent,] }],
        dropdownMenuComponent: [{ type: ContentChild, args: [DropdownMenuComponent,] }],
        defaultToggleElement: [{ type: ViewChild, args: ['toggleElement',] }]
    };
    return DropdownComponent;
}());
export { DropdownComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.documentClickListener;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.listeners;
    /** @type {?} */
    DropdownComponent.prototype.buttonStyleClass;
    /** @type {?} */
    DropdownComponent.prototype.buttonBackgroudColor;
    /** @type {?} */
    DropdownComponent.prototype.contentStyleClass;
    /** @type {?} */
    DropdownComponent.prototype.isCollapsed;
    /** @type {?} */
    DropdownComponent.prototype.isWrapper;
    /** @type {?} */
    DropdownComponent.prototype.styleClass;
    /** @type {?} */
    DropdownComponent.prototype.toggleElement;
    /** @type {?} */
    DropdownComponent.prototype.toggleText;
    /** @type {?} */
    DropdownComponent.prototype.onCollapseStart;
    /** @type {?} */
    DropdownComponent.prototype.onCollapseDone;
    /** @type {?} */
    DropdownComponent.prototype.dropdownToggleComponent;
    /** @type {?} */
    DropdownComponent.prototype.dropdownMenuComponent;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.defaultToggleElement;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    DropdownComponent.prototype.renderer2;
}
//# sourceMappingURL=data:application/json;base64,