/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild } from '@angular/core';
import { BoxInfoContentDirective, BoxInfoFooterDirective, BoxInfoHeaderDirective } from './box-info.directive';
/*
 *
 */
var BoxInfoComponent = /** @class */ (function () {
    function BoxInfoComponent() {
        this.contentStyleClass = 'info-box-number';
        this.footerStyleClass = 'progress-description';
        this.headerStyleClass = 'info-box-text';
        this.iconColor = '#fff';
        this.iconStyleClass = 'ion ion-bag';
        this.styleClass = 'info-box';
    }
    /**
     * @method ngOnInit
     */
    /**
     * \@method ngOnInit
     * @return {?}
     */
    BoxInfoComponent.prototype.ngOnInit = /**
     * \@method ngOnInit
     * @return {?}
     */
    function () {
        if (!this.backgroundColor) {
            this.progressBarBg = this.iconBackgroundColor;
        }
    };
    BoxInfoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-box-info',
                    template: "<div [ngClass]=\"styleClass\" [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\">\n  <span class=\"info-box-icon\" [mkColor]=\"iconBackgroundColor\" mkColorProperty=\"background-color\">\n    <i [ngClass]=\"iconStyleClass\" [mkFontColor]=\"iconColor\"></i>\n  </span>\n  <div class=\"info-box-content\">\n    <span *ngIf=\"header || boxInfoHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </span>\n    <span [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\">\n      <ng-container *ngIf=\"boxInfoHeaderDirective || boxInfoContentDirective || boxInfoFooterDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </span>\n    <div *ngIf=\"progressWidth\" class=\"progress\">\n      <div class=\"progress-bar\" [mkColor]=\"progressBarBg\" mkColorProperty=\"background-color\" [style.width.%]=\"progressWidth\"></div>\n    </div>\n    <span *ngIf=\"footer || boxInfoFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </span>\n  </div>\n</div>\n",
                    styles: [".info-box.bg-color>.info-box-content{color:#fff}"]
                }] }
    ];
    BoxInfoComponent.propDecorators = {
        backgroundColor: [{ type: Input }],
        contentStyleClass: [{ type: Input }],
        contentColor: [{ type: Input }],
        footer: [{ type: Input }],
        footerColor: [{ type: Input }],
        footerStyleClass: [{ type: Input }],
        header: [{ type: Input }],
        headerColor: [{ type: Input }],
        headerStyleClass: [{ type: Input }],
        iconBackgroundColor: [{ type: Input }],
        iconColor: [{ type: Input }],
        iconStyleClass: [{ type: Input }],
        progressWidth: [{ type: Input }],
        styleClass: [{ type: Input }],
        boxInfoHeaderDirective: [{ type: ContentChild, args: [BoxInfoHeaderDirective,] }],
        boxInfoFooterDirective: [{ type: ContentChild, args: [BoxInfoFooterDirective,] }],
        boxInfoContentDirective: [{ type: ContentChild, args: [BoxInfoContentDirective,] }]
    };
    return BoxInfoComponent;
}());
export { BoxInfoComponent };
if (false) {
    /** @type {?} */
    BoxInfoComponent.prototype.progressBarBg;
    /** @type {?} */
    BoxInfoComponent.prototype.backgroundColor;
    /** @type {?} */
    BoxInfoComponent.prototype.contentStyleClass;
    /** @type {?} */
    BoxInfoComponent.prototype.contentColor;
    /** @type {?} */
    BoxInfoComponent.prototype.footer;
    /** @type {?} */
    BoxInfoComponent.prototype.footerColor;
    /** @type {?} */
    BoxInfoComponent.prototype.footerStyleClass;
    /** @type {?} */
    BoxInfoComponent.prototype.header;
    /** @type {?} */
    BoxInfoComponent.prototype.headerColor;
    /** @type {?} */
    BoxInfoComponent.prototype.headerStyleClass;
    /** @type {?} */
    BoxInfoComponent.prototype.iconBackgroundColor;
    /** @type {?} */
    BoxInfoComponent.prototype.iconColor;
    /** @type {?} */
    BoxInfoComponent.prototype.iconStyleClass;
    /** @type {?} */
    BoxInfoComponent.prototype.progressWidth;
    /** @type {?} */
    BoxInfoComponent.prototype.styleClass;
    /** @type {?} */
    BoxInfoComponent.prototype.boxInfoHeaderDirective;
    /** @type {?} */
    BoxInfoComponent.prototype.boxInfoFooterDirective;
    /** @type {?} */
    BoxInfoComponent.prototype.boxInfoContentDirective;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LWluZm8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hZG1pbi1sdGUvIiwic291cmNlcyI6WyJsaWIvYm94LWluZm8vYm94LWluZm8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7Ozs7QUFLL0c7SUFBQTtRQVNrQixzQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUl0QyxxQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQztRQUcxQyxxQkFBZ0IsR0FBRyxlQUFlLENBQUM7UUFFbkMsY0FBUyxHQUFHLE1BQU0sQ0FBQztRQUNuQixtQkFBYyxHQUFHLGFBQWEsQ0FBQztRQUUvQixlQUFVLEdBQUcsVUFBVSxDQUFDO0lBYzFDLENBQUM7SUFSQzs7T0FFRzs7Ozs7SUFDSCxtQ0FBUTs7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDekIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7U0FDL0M7SUFDSCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUV2Qiw2MENBQXdDOztpQkFDekM7OztrQ0FJRSxLQUFLO29DQUNMLEtBQUs7K0JBQ0wsS0FBSzt5QkFDTCxLQUFLOzhCQUNMLEtBQUs7bUNBQ0wsS0FBSzt5QkFDTCxLQUFLOzhCQUNMLEtBQUs7bUNBQ0wsS0FBSztzQ0FDTCxLQUFLOzRCQUNMLEtBQUs7aUNBQ0wsS0FBSztnQ0FDTCxLQUFLOzZCQUNMLEtBQUs7eUNBRUwsWUFBWSxTQUFDLHNCQUFzQjt5Q0FDbkMsWUFBWSxTQUFDLHNCQUFzQjswQ0FDbkMsWUFBWSxTQUFDLHVCQUF1Qjs7SUFVdkMsdUJBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQTlCWSxnQkFBZ0I7OztJQUMzQix5Q0FBNkI7O0lBRTdCLDJDQUF3Qzs7SUFDeEMsNkNBQXNEOztJQUN0RCx3Q0FBcUM7O0lBQ3JDLGtDQUErQjs7SUFDL0IsdUNBQW9DOztJQUNwQyw0Q0FBMEQ7O0lBQzFELGtDQUErQjs7SUFDL0IsdUNBQW9DOztJQUNwQyw0Q0FBbUQ7O0lBQ25ELCtDQUE0Qzs7SUFDNUMscUNBQW1DOztJQUNuQywwQ0FBK0M7O0lBQy9DLHlDQUFzQzs7SUFDdEMsc0NBQXdDOztJQUV4QyxrREFBNEY7O0lBQzVGLGtEQUE0Rjs7SUFDNUYsbURBQStGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBDb250ZW50Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJveEluZm9Db250ZW50RGlyZWN0aXZlLCBCb3hJbmZvRm9vdGVyRGlyZWN0aXZlLCBCb3hJbmZvSGVhZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9ib3gtaW5mby5kaXJlY3RpdmUnO1xuXG4vKlxuICpcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWstYm94LWluZm8nLFxuICBzdHlsZVVybHM6IFsnLi9ib3gtaW5mby5jb21wb25lbnQuY3NzJ10sXG4gIHRlbXBsYXRlVXJsOiAnLi9ib3gtaW5mby5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQm94SW5mb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHB1YmxpYyBwcm9ncmVzc0JhckJnOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgcHVibGljIGJhY2tncm91bmRDb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgY29udGVudFN0eWxlQ2xhc3MgPSAnaW5mby1ib3gtbnVtYmVyJztcbiAgQElucHV0KCkgcHVibGljIGNvbnRlbnRDb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgZm9vdGVyOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBmb290ZXJDb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgZm9vdGVyU3R5bGVDbGFzcyA9ICdwcm9ncmVzcy1kZXNjcmlwdGlvbic7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXI6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGhlYWRlckNvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXJTdHlsZUNsYXNzID0gJ2luZm8tYm94LXRleHQnO1xuICBASW5wdXQoKSBwdWJsaWMgaWNvbkJhY2tncm91bmRDb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgaWNvbkNvbG9yID0gJyNmZmYnO1xuICBASW5wdXQoKSBwdWJsaWMgaWNvblN0eWxlQ2xhc3MgPSAnaW9uIGlvbi1iYWcnO1xuICBASW5wdXQoKSBwdWJsaWMgcHJvZ3Jlc3NXaWR0aDogbnVtYmVyO1xuICBASW5wdXQoKSBwdWJsaWMgc3R5bGVDbGFzcyA9ICdpbmZvLWJveCc7XG5cbiAgQENvbnRlbnRDaGlsZChCb3hJbmZvSGVhZGVyRGlyZWN0aXZlKSBwdWJsaWMgYm94SW5mb0hlYWRlckRpcmVjdGl2ZTogQm94SW5mb0hlYWRlckRpcmVjdGl2ZTtcbiAgQENvbnRlbnRDaGlsZChCb3hJbmZvRm9vdGVyRGlyZWN0aXZlKSBwdWJsaWMgYm94SW5mb0Zvb3RlckRpcmVjdGl2ZTogQm94SW5mb0Zvb3RlckRpcmVjdGl2ZTtcbiAgQENvbnRlbnRDaGlsZChCb3hJbmZvQ29udGVudERpcmVjdGl2ZSkgcHVibGljIGJveEluZm9Db250ZW50RGlyZWN0aXZlOiBCb3hJbmZvQ29udGVudERpcmVjdGl2ZTtcblxuICAvKipcbiAgICogQG1ldGhvZCBuZ09uSW5pdFxuICAgKi9cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLmJhY2tncm91bmRDb2xvcikge1xuICAgICAgdGhpcy5wcm9ncmVzc0JhckJnID0gdGhpcy5pY29uQmFja2dyb3VuZENvbG9yO1xuICAgIH1cbiAgfVxufVxuIl19