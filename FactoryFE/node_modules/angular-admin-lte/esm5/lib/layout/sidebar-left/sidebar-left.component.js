/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';
import { NavigationEnd, PRIMARY_OUTLET, Router } from '@angular/router';
import { RoutingService } from '../../services/routing.service';
import { WrapperService } from '../wrapper/wrapper.service';
import { HeaderService } from '../header/header.service';
import { LayoutStore } from '../layout.store';
import { removeListeners, removeSubscriptions } from '../../helpers';
import { SidebarLeftToggleDirective } from './sidebar-left.directive';
/**
 * @record
 */
export function Item() { }
if (false) {
    /** @type {?} */
    Item.prototype.id;
    /** @type {?} */
    Item.prototype.parentId;
    /** @type {?} */
    Item.prototype.label;
    /** @type {?|undefined} */
    Item.prototype.route;
    /** @type {?|undefined} */
    Item.prototype.iconClasses;
    /** @type {?|undefined} */
    Item.prototype.children;
    /** @type {?|undefined} */
    Item.prototype.isActive;
    /** @type {?|undefined} */
    Item.prototype.isCollapsed;
    /** @type {?|undefined} */
    Item.prototype.disableCollapse;
}
var SidebarLeftComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param  changeDetectorRef  [description]
     * @param  layoutStore        [description]
     * @param  ngZone             [description]
     * @param  renderer2          [description]
     * @param  router             [description]
     * @param  routingService     [description]
     * @param  wrapperService     [description]
     * @param  headerService      [description]
     */
    function SidebarLeftComponent(changeDetectorRef, layoutStore, ngZone, renderer2, router, routingService, wrapperService, headerService) {
        this.changeDetectorRef = changeDetectorRef;
        this.layoutStore = layoutStore;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.router = router;
        this.routingService = routingService;
        this.wrapperService = wrapperService;
        this.headerService = headerService;
        this.collapsedItems = [];
        this.activatedItems = [];
        this.toggleListeners = [];
        this.listeners = [];
        this.itemsByIds = {};
        this.runningAnimations = 0;
        this.subscriptions = [];
    }
    /**
     * @method ngOnInit
     */
    /**
     * \@method ngOnInit
     * @return {?}
     */
    SidebarLeftComponent.prototype.ngOnInit = /**
     * \@method ngOnInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.menu = value;
            _this.monkeyPatchMenu(_this.menu);
            if (_this.initialized) {
                _this.setMenuListeners(_this.activeUrl);
                _this.setSidebarListeners();
                _this.setMenuTogglesListeners();
            }
            _this.initialized = true;
        })));
        this.subscriptions.push(this.layoutStore.sidebarLeftMenuActiveUrl.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.activeUrl = value;
            _this.setMenuListeners(value);
        })));
        this.subscriptions.push(this.routingService.events.subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event instanceof NavigationEnd) {
                _this.activeUrl = event.url;
                _this.setMenuListeners(event.url);
            }
        })));
        this.setSidebarListeners();
    };
    /**
     * @method ngAfterViewInit
     */
    /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    SidebarLeftComponent.prototype.ngAfterViewInit = /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    function () {
        this.setMenuTogglesListeners();
        this.checkMenuWithoutChildren();
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    SidebarLeftComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.subscriptions = removeSubscriptions(this.subscriptions);
        this.listeners = removeListeners(this.listeners);
        this.toggleListeners = removeListeners(this.toggleListeners);
    };
    /**
     * [setSidebarListeners description]
     * @method setSidebarListeners
     */
    /**
     * [setSidebarListeners description]
     * \@method setSidebarListeners
     * @return {?}
     */
    SidebarLeftComponent.prototype.setSidebarListeners = /**
     * [setSidebarListeners description]
     * \@method setSidebarListeners
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscriptions.push(this.layoutStore.layout.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.layout = value;
            _this.setSidebarHeight();
        })));
        this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.windowInnerHeight = value;
            _this.setSidebarHeight();
        })));
        this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe((/**
         * @return {?}
         */
        function () {
            _this.changeDetectorRef.detectChanges();
        })));
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.listeners.push(_this.renderer2.listen(_this.sidebarElement.nativeElement, 'mouseenter', (/**
             * @return {?}
             */
            function () {
                _this.layoutStore.sidebarLeftMouseOver(true);
            })));
            _this.listeners.push(_this.renderer2.listen(_this.sidebarElement.nativeElement, 'mouseleave', (/**
             * @return {?}
             */
            function () {
                _this.layoutStore.sidebarLeftMouseOver(false);
            })));
        }));
        this.subscriptions.push(this.layoutStore.windowInnerWidth.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.windowInnerWidth = value;
            if (!_this.isSidebarLeftCollapsed && _this.windowInnerWidth <= 767) {
                _this.layoutStore.sidebarLeftCollapsed(true);
            }
            else if (_this.windowInnerWidth > 767 && _this.isSidebarLeftCollapsed && !_this.isSidebarLeftExpandOnOver) {
                _this.layoutStore.sidebarLeftCollapsed(false);
            }
        })));
        this.subscriptions.push(this.layoutStore.isSidebarLeftMouseOver.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.isSidebarLeftMouseOver = value;
            if (_this.isSidebarLeftExpandOnOver) {
                _this.layoutStore.sidebarLeftCollapsed(!value);
            }
        })));
        this.subscriptions.push(this.layoutStore.isSidebarLeftExpandOnOver.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.isSidebarLeftExpandOnOver = value;
            if (_this.windowInnerWidth > 767 && _this.isSidebarLeftCollapsed !== undefined) {
                _this.layoutStore.sidebarLeftCollapsed(value);
            }
        })));
        this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.isSidebarLeftCollapsed = value;
            if (_this.windowInnerWidth <= 767) {
                if (value) {
                    _this.renderer2.removeClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');
                }
                else {
                    _this.renderer2.addClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');
                }
            }
            else {
                if (_this.isSidebarLeftExpandOnOver && !_this.isSidebarLeftMouseOver && !value) {
                    _this.layoutStore.sidebarLeftExpandOnOver(false);
                }
                if (value) {
                    _this.renderer2.addClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');
                    if (_this.isSidebarLeftExpandOnOver) {
                        _this.renderer2.removeClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');
                    }
                }
                else {
                    _this.renderer2.removeClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');
                    if (_this.isSidebarLeftExpandOnOver) {
                        _this.renderer2.addClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');
                    }
                }
            }
        })));
        this.subscriptions.push(this.layoutStore.isSidebarLeftMini.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                _this.renderer2.addClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');
            }
            else {
                _this.renderer2.removeClass(_this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');
            }
        })));
    };
    /**
     * [setMenuListeners description]
     * @method setMenuListeners
     */
    /**
     * [setMenuListeners description]
     * \@method setMenuListeners
     * @param {?} url
     * @return {?}
     */
    SidebarLeftComponent.prototype.setMenuListeners = /**
     * [setMenuListeners description]
     * \@method setMenuListeners
     * @param {?} url
     * @return {?}
     */
    function (url) {
        if (url === '/') {
            this.activeItems(url);
            this.changeDetectorRef.detectChanges();
        }
        else {
            /** @type {?} */
            var primaryOutlet = this.router.parseUrl(url).root.children[PRIMARY_OUTLET];
            if (primaryOutlet) {
                this.activeItems(primaryOutlet.toString());
                this.changeDetectorRef.detectChanges();
            }
        }
        if (this.windowInnerWidth <= 767 || this.isSidebarLeftExpandOnOver) {
            this.layoutStore.sidebarLeftCollapsed(true);
        }
    };
    /**
     * [getIconClasses description]
     * @method getIconClasses
     * @param item [description]
     * @return [description]
     */
    /**
     * [getIconClasses description]
     * \@method getIconClasses
     * @param {?} item [description]
     * @return {?} [description]
     */
    SidebarLeftComponent.prototype.getIconClasses = /**
     * [getIconClasses description]
     * \@method getIconClasses
     * @param {?} item [description]
     * @return {?} [description]
     */
    function (item) {
        if (item.iconClasses || item.iconClasses === '') {
            return item.iconClasses;
        }
        else {
            return 'fa fa-circle-o';
        }
    };
    /**
     * [visibilityStateStart description]
     * @method visibilityStateStart
     * @param event [description]
     */
    /**
     * [visibilityStateStart description]
     * \@method visibilityStateStart
     * @param {?} event [description]
     * @return {?}
     */
    SidebarLeftComponent.prototype.visibilityStateStart = /**
     * [visibilityStateStart description]
     * \@method visibilityStateStart
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.runningAnimations++;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.runningAnimations--;
                if (!_this.runningAnimations) {
                    _this.layoutStore.setSidebarLeftElementHeight(_this.sidebarElement.nativeElement.offsetHeight);
                }
            }), event.totalTime);
        }));
    };
    /**
     * [uncollapseItemParents description]
     * @method uncollapseItemParents
     * @param item           [description]
     * @param isActive       [description]
     */
    /**
     * [uncollapseItemParents description]
     * \@method uncollapseItemParents
     * @private
     * @param {?} item           [description]
     * @param {?=} isActive       [description]
     * @return {?}
     */
    SidebarLeftComponent.prototype.uncollapseItemParents = /**
     * [uncollapseItemParents description]
     * \@method uncollapseItemParents
     * @private
     * @param {?} item           [description]
     * @param {?=} isActive       [description]
     * @return {?}
     */
    function (item, isActive) {
        if (isActive === void 0) { isActive = false; }
        if (isActive) {
            item.isActive = true;
            this.activatedItems.push(item);
        }
        item.isCollapsed = false;
        this.collapsedItems.push(item);
        if (item.parentId) {
            this.uncollapseItemParents(this.itemsByIds[item.parentId], isActive);
        }
    };
    /**
     * [findItemsByUrl description]
     * @method findItemsByUrl
     * @param url   [description]
     * @param items [description]
     * @param returnItems [description]
     * @return [description]
     */
    /**
     * [findItemsByUrl description]
     * \@method findItemsByUrl
     * @private
     * @param {?} url   [description]
     * @param {?} items [description]
     * @param {?=} returnItems [description]
     * @return {?} [description]
     */
    SidebarLeftComponent.prototype.findItemsByUrl = /**
     * [findItemsByUrl description]
     * \@method findItemsByUrl
     * @private
     * @param {?} url   [description]
     * @param {?} items [description]
     * @param {?=} returnItems [description]
     * @return {?} [description]
     */
    function (url, items, returnItems) {
        var _this = this;
        if (returnItems === void 0) { returnItems = []; }
        items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item.route === url) {
                returnItems.push(item);
            }
            else if (item.children) {
                _this.findItemsByUrl(url, item.children, returnItems);
            }
        }));
        return returnItems;
    };
    /**
     * [activeItems description]
     * @method activeItems
     * @param url [description]
     */
    /**
     * [activeItems description]
     * \@method activeItems
     * @private
     * @param {?} url [description]
     * @return {?}
     */
    SidebarLeftComponent.prototype.activeItems = /**
     * [activeItems description]
     * \@method activeItems
     * @private
     * @param {?} url [description]
     * @return {?}
     */
    function (url) {
        var _this = this;
        this.activatedItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.isActive = false;
        }));
        this.activatedItems = [];
        this.collapsedItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.isActive = false;
            item.isCollapsed = true;
        }));
        this.collapsedItems = [];
        /** @type {?} */
        var items = this.findItemsByUrl(url, this.menu);
        items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.isActive = true;
            _this.uncollapseItemParents(item, true);
            _this.activatedItems.push(item);
        }));
    };
    /**
     * [monkeyPatchMenu description]
     * @method monkeyPatchMenu
     * @param items    [description]
     * @param parentId [description]
     */
    /**
     * [monkeyPatchMenu description]
     * \@method monkeyPatchMenu
     * @private
     * @param {?} items    [description]
     * @param {?=} parentId [description]
     * @return {?}
     */
    SidebarLeftComponent.prototype.monkeyPatchMenu = /**
     * [monkeyPatchMenu description]
     * \@method monkeyPatchMenu
     * @private
     * @param {?} items    [description]
     * @param {?=} parentId [description]
     * @return {?}
     */
    function (items, parentId) {
        var _this = this;
        items.forEach((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        function (item, index) {
            item.id = parentId ? Number(parentId + '' + (index + 1)) : index + 1;
            if (parentId) {
                item.parentId = parentId;
            }
            if (!item.disableCollapse) {
                item.isCollapsed = true;
            }
            item.isActive = false;
            if (parentId || item.children) {
                _this.itemsByIds[item.id] = item;
            }
            if (item.children) {
                _this.monkeyPatchMenu(item.children, item.id);
            }
        }));
    };
    /**
     * [setMenuTogglesListeners description]
     * @method setMenuTogglesListeners
     */
    /**
     * [setMenuTogglesListeners description]
     * \@method setMenuTogglesListeners
     * @private
     * @return {?}
     */
    SidebarLeftComponent.prototype.setMenuTogglesListeners = /**
     * [setMenuTogglesListeners description]
     * \@method setMenuTogglesListeners
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.toggleListeners = removeListeners(this.toggleListeners);
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.sidebarLeftToggleDirectives.forEach((/**
             * @param {?} menuToggle
             * @return {?}
             */
            function (menuToggle) {
                _this.toggleListeners.push(_this.renderer2.listen(menuToggle.elementRef.nativeElement, 'click', (/**
                 * @param {?} event
                 * @return {?}
                 */
                function (event) {
                    event.preventDefault();
                    if (menuToggle.item.isCollapsed) {
                        _this.collapsedItems.forEach((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) {
                            if (!item.disableCollapse) {
                                item.isCollapsed = true;
                            }
                        }));
                        _this.collapsedItems = [];
                        _this.uncollapseItemParents(menuToggle.item);
                    }
                    else {
                        menuToggle.item.isCollapsed = !menuToggle.item.isCollapsed;
                    }
                    _this.changeDetectorRef.detectChanges();
                })));
            }));
        }));
    };
    /**
     * [checkMenuWithoutChildren description]
     * @method checkMenuWithoutChildren
     */
    /**
     * [checkMenuWithoutChildren description]
     * \@method checkMenuWithoutChildren
     * @private
     * @return {?}
     */
    SidebarLeftComponent.prototype.checkMenuWithoutChildren = /**
     * [checkMenuWithoutChildren description]
     * \@method checkMenuWithoutChildren
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var menuHaveChildren;
        this.menu.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item.children) {
                return menuHaveChildren = true;
            }
        }));
        if (!menuHaveChildren) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.layoutStore.setSidebarLeftElementHeight(_this.sidebarElement.nativeElement.offsetHeight);
                }));
            }));
        }
    };
    /**
     * [setSidebarHeight description]
     * @method setSidebarHeight
     */
    /**
     * [setSidebarHeight description]
     * \@method setSidebarHeight
     * @private
     * @return {?}
     */
    SidebarLeftComponent.prototype.setSidebarHeight = /**
     * [setSidebarHeight description]
     * \@method setSidebarHeight
     * @private
     * @return {?}
     */
    function () {
        if (this.layout === 'fixed') {
            /** @type {?} */
            var height = this.windowInnerHeight - this.headerService.offsetHeight;
            if (height && height !== this.sidebarHeight) {
                this.sidebarHeight = height;
                this.sidebarOverflow = 'auto';
                this.changeDetectorRef.detectChanges();
            }
        }
        else if (this.sidebarHeight) {
            this.sidebarOverflow = this.sidebarHeight = null;
            this.changeDetectorRef.detectChanges();
        }
    };
    SidebarLeftComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-sidebar-left',
                    template: "<aside class=\"main-sidebar\">\n  <section class=\"sidebar\" #sidebarElement [style.height.px]=\"sidebarHeight\" [style.overflow]=\"sidebarOverflow\">\n    <ng-content></ng-content>\n  \t<ul class=\"sidebar-menu\">\n      <ng-container *ngFor=\"let item of menu\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n  \t</ul>\n  </section>\n</aside>\n\n<ng-template #sidebarInner let-item=\"item\">\n  <li [class.active]=\"item.isActive\" [class.header]=\"item.separator\" [class.menu-open]=\"!item.isCollapsed\">\n    <span *ngIf=\"item.separator\">{{item.label}}</span>\n    <a *ngIf=\"!item.separator && item.route\" [routerLink]=\"item.route\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <a *ngIf=\"!item.separator && !item.route\" href=\"#\" [mkMenuToggle]=\"item\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <ul *ngIf=\"item.children\" [mkCollapseAnimation]=\"item.isCollapsed\" (mkCollapseAnimation.start)=\"visibilityStateStart($event)\" class=\"treeview-menu\">\n      <ng-container *ngFor=\"let item of item.children\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n    </ul>\n  </li>\n</ng-template>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".treeview-menu.collapse{display:none}.treeview-menu,.treeview-menu.collapse.in{display:block}"]
                }] }
    ];
    /** @nocollapse */
    SidebarLeftComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: LayoutStore },
        { type: NgZone },
        { type: Renderer2 },
        { type: Router },
        { type: RoutingService },
        { type: WrapperService },
        { type: HeaderService }
    ]; };
    SidebarLeftComponent.propDecorators = {
        sidebarElement: [{ type: ViewChild, args: ['sidebarElement',] }],
        sidebarLeftToggleDirectives: [{ type: ViewChildren, args: [SidebarLeftToggleDirective,] }]
    };
    return SidebarLeftComponent;
}());
export { SidebarLeftComponent };
if (false) {
    /** @type {?} */
    SidebarLeftComponent.prototype.menu;
    /** @type {?} */
    SidebarLeftComponent.prototype.sidebarHeight;
    /** @type {?} */
    SidebarLeftComponent.prototype.sidebarOverflow;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.layout;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.isSidebarLeftCollapsed;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.isSidebarLeftExpandOnOver;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.isSidebarLeftMouseOver;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.windowInnerWidth;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.windowInnerHeight;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.collapsedItems;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.activatedItems;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.toggleListeners;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.listeners;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.itemsByIds;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.runningAnimations;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.activeUrl;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.initialized;
    /** @type {?} */
    SidebarLeftComponent.prototype.sidebarElement;
    /** @type {?} */
    SidebarLeftComponent.prototype.sidebarLeftToggleDirectives;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.layoutStore;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.renderer2;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.routingService;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.wrapperService;
    /**
     * @type {?}
     * @private
     */
    SidebarLeftComponent.prototype.headerService;
}
//# sourceMappingURL=data:application/json;base64,